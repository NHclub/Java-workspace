# 23-04-08 (인프런 즐거운 자바)
---
## Java IO
- IO란 Input $ Output 즉, 입출력이다
- 입력은 키보드, 네트워크, 파일등으로 부터 받을 수 있다
- 출력은 화면, 네트워크, 파일등에 할 수 있다.
- Java IO는 Decorator 패턴으로 만들어졌다.
- Java IO 클래스는 생성자가 중요하다. 장식은 InputStream, OutputStream, Reader, Writer를 생성자에서 받아들인다. 받아들이지 않으면 주인공 역할을 한다.

## Java IO의 특수한 객체
- System.in:  표준 입력(InputStream)
- System.out: 표준 출력(PrintStream)
- System.err: 표준 에러 출력(PrintStream)

## Java IO는 클래스 이름이 중요하다
Stream으로 끝나는 클래스	byte 단위 입출력 클래스
InputStream으로 끝나는 클래스	byte 단위로 입력을 받는 클래스
OutputStream으로 끝나는 클래스	byte 단위로 출력을 하는 클래스
Reader로 끝나는 클래스	문자 단위로 입력을 받는 클래스
Writer로 끝나는 클래스	문자 단위로 출력을 하는 클래스
File로 시작할 경우
(File 클래스 제외)	File로부터 입력이나 출력을 하는 클래스
ByteArray로 시작할 경우	입력 클래스의 경우 byte 배열로부터 읽어 들이고, 출력 클래스의 경우 클래스 내부의 자료구조에 출력을 한 후 출력된 결과를 byte 배열로 반환하는 기능을 가진다.
CharArray로 시작할 경우	입력 클래스의 경우 char 배열로부터 읽어 들이고, 출력 클래스의 경우 클래스 내부의 자료구조에 출력을 한 후 출력된 결과를 char배열로 반환하는 기능을 가진다.
Filter로 시작할 경우	Filter로 시작하는 입출력 클래스는 직접 사용하는 것보다는 상속받아 사용을 하며, 사용자가 원하는 내용만 필터링할 목적으로 사용된다.
Data로 시작할 경우	다양한 데이터 형을 입출력 할 목적으로 사용한다. 특히 기본형 값(int, float, double 등)을 출력하는데 유리하다.
Buffered로 시작할 경우	프로그램에서 Buffer라는 말은 메모리를 의미한다. 입출력 시에 병목현상을 줄이고 싶을 경우 사용한다.
RandomAccessFile	입력이나 출력을 모두 할 수 있는 클래스로써, 파일에서 임의의 위치의 내용을 읽거나 쓸 수 있는 기능을 제공한다.